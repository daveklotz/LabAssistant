#include "lab assistant.h"#include "duplicateCheck.h"#include "database.h"#include "user.h"#include "checkIn.h"#include "error.h"#include <string.h>#include "interface.h"#include "dialog.h"#include "checkStatus.h"#include "menu.h"#include "employeeRecord.h"#include "otherUser.h"#include "bumpUser.h"#include "waitList.h"#include "loginEmployee.h"#include "checkInOther.h"#include "loginTemp.h"void LoginTemp(dialogRecordHdl dialogRecord){		long 			machineArrayNumber;	computerRecPtr	theComputer;	short 			machineNumber; 	//, itemHit;	userNode		theUser;	//short			numberofDuplicates;	unsigned long	theTime;	Boolean			truthFlag = 1;	//Str255 			badIDString;	extern char		gFeatureFlag;				HLock((Handle)dialogRecord);		machineArrayNumber = (*dialogRecord)->misc;			if(machineArrayNumber != -99)	{		SysBeep(0);	}	else if(!FindEmptyMachine(&machineNumber))	{		NewAlert("\pNo Empty Machines.", false, ok, 2);		HUnlock((Handle)dialogRecord);		DisposeHandle((Handle)dialogRecord);		DisableMenus(false);		return;	}		else		FindMachineNumber((long) machineNumber, &machineArrayNumber);				theUser.studentNumber = (*dialogRecord)->theRecord;	strcpy(theUser.name, "Temporary User");	theUser.gender = 'U';	theUser.priority = 3;	BitClr(&(theUser.status), RestrictedUserBit);	theUser.next = NULL;		LockMachineRecordHdl();	theComputer = GetMachineRecord(machineArrayNumber);	memcpy(&theComputer->userInfo, &theUser, sizeof(userNode));			GetDateTime(&theTime);	theComputer->timeOn = theTime;	theComputer->employeeNumber = GetActiveEmployee();			(*dialogRecord)->theRecord = machineArrayNumber;	(*dialogRecord)->theEvent = kEventCheckIn;	(*dialogRecord)->callBack = CheckInUser;			HUnlock((Handle) dialogRecord);	UnLockMachineRecordHdl();			DisableMenus(true);	UserInfoBoxSetup(dialogRecord);}