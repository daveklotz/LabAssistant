#include "lab assistant.h"#include "addEmployee.h"#include "employee.h"#include "employeeRecord.h"#include "Menu.h"void AddEmployee(void){	employeeNode		*theEmployee;	dialogRecordHdl		dialogRecord;		theEmployee = (employeeNode *) NewPtr(sizeof(employeeNode));	dialogRecord = (dialogRecordHdl) NewHandle(sizeof(dialogRec));		theEmployee->name[0] = 0;	theEmployee->studentNumber = 0;	theEmployee->email[0] = 0;	theEmployee->password[0] = 0;	theEmployee->supervisor = false;		HLock((Handle) dialogRecord);	(*dialogRecord)->theRecord = (long) theEmployee;	(*dialogRecord)->theEvent = kEventAddEmployee;	(*dialogRecord)->callBack = AddEmployeeCallBack;	HUnlock((Handle) dialogRecord);		EditEmployeeBoxSetup(dialogRecord);}void AddEmployeeCallBack(dialogRecordHdl dialogRecord){	employeeNode		*theEmployee, *employeeHead;	short				itemHit;		HLock((Handle) dialogRecord);	theEmployee = (employeeNode *) (*dialogRecord)->theRecord;	itemHit = (*dialogRecord)->itemHit;	HUnlock((Handle) dialogRecord);		switch(itemHit)	{		case ok:			employeeHead = CreateEmployeeList();			ReadEmployeeInfo(employeeHead);				AddEmployeeRecord(employeeHead, theEmployee);			WriteEmployeeInfo(employeeHead);			DeleteEmployeeList(employeeHead);		case cancel:			DisposePtr((Ptr) theEmployee);			DisposeHandle((Handle) dialogRecord);			DisableMenus(false);			break;	}}