#include "lab assistant.h"#include "error.h"#include "database.h"#include "machineRecord.h"#include "Norm_Files.h"extern Handle				gMachineRecords;extern char					gFeatureFlag;void ComputerRecordSave(void){	short	fileRefNum;	FSSpec	tempFileSpec, originalFileSpec;	long	inOutCount;	Str255	tempFileName;	long	numberofMachines = GetNumberofMachines();		HLock((Handle) gMachineRecords);	CreateTempFileName(tempFileName);		FSMakeFSSpec(0, 0, tempFileName, &tempFileSpec);                    /* Create Temp file for "Safe" file change */		FSpCreate(&tempFileSpec, 'NORM', 'temp', (ScriptCode) -1);		FSpOpenDF(&tempFileSpec, fsWrPerm, &fileRefNum);			if(FSMakeFSSpec(0, 0, "\pComputer Log", &originalFileSpec) == -43)	{		FSpCreate(&originalFileSpec, 'NORM', 'TEXT', (ScriptCode) -1);		gFeatureFlag = 0;	}		inOutCount = sizeof(gFeatureFlag);	FSWrite(fileRefNum, &inOutCount, &gFeatureFlag);                    /* Save out Feature flag to file (i.e. Database checking On/Off, Teaching On/Off) */		inOutCount = sizeof(computerRecord) * numberofMachines;	FSWrite(fileRefNum, &inOutCount, (*gMachineRecords));					/* Save computerRecord info */			if(FSpExchangeFiles(&tempFileSpec, &originalFileSpec))              /* Exchange original Computer Log file with Temp file for Safe save */		DoError("\pError writing computer log file. Tell Manager!", false);		FSClose(fileRefNum);		FlushVol(nil, 0);		if(FSpDelete(&tempFileSpec))		DoError("\pError deleteing temp computer log file.", false);			HUnlock((Handle) gMachineRecords);	}/*******************************************************************		void ComputerRecordRead(void)--------------------------------------------------------------------SYNOPSIS: This routine reads the computer record information from a           file called "Computer Log". The information contains the          current user of the computer, and all information contained          in a computerRecord.CALLED BY: StartupSetup() "norm.c"PASS: Nothing	RETURN: NothingDESTROYED: NothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void ComputerRecordRead(void){	short	fileRefNum;	FSSpec	fileSpec;	long	inOutCounter;	long	numberofMachines = GetNumberofMachines();		HLock((Handle) gMachineRecords);	if(FSMakeFSSpec(0, 0, "\pComputer Log", &fileSpec) == -43)            /* Is there a file called "Computer Log"? */		ComputerRecordSave();                                             /* If not, create one. */			FSpOpenDF(&fileSpec, fsRdPerm, &fileRefNum);		inOutCounter = sizeof(gFeatureFlag);	FSRead(fileRefNum, &inOutCounter, &gFeatureFlag);                     /* Read Feature Flag (i.e. Database Checking ON/Off, Teaching On/Off */		inOutCounter = sizeof(computerRecord) * numberofMachines;		FSRead(fileRefNum, &inOutCounter, (*gMachineRecords));		/* Read computerRecord info */			FSClose(fileRefNum);	HUnlock((Handle) gMachineRecords);		UnSelectRecords();}void UnSelectRecords(void){	short 	counter;	long	numberofMachines = GetNumberofMachines();	computerRecPtr	theComputer;		HLock((Handle) gMachineRecords);	for(counter = 0; counter < numberofMachines; counter ++)	{		theComputer = GetMachineRecord(counter);		BitClr(&theComputer->status, kSelected);	}	HUnlock((Handle) gMachineRecords);}