short ReadInBuffer(Handle *buffer, short *refNum, long *size);Boolean WriteOutBuffer(Handle *buffer, short *refNum, long *size);void Merge(StandardFileReply *input_1_FileReply, StandardFileReply *input_2_FileReply);Boolean ReadEmployeeDB(employeeNode *employeeHead, Str255 fileName);Boolean WriteEmployeeDB(employeeNode *employeeHead, Str255 fileName);OSErr DataFileWrite(short fRefNum, char *writeString, Boolean returnTerminate);void StudentRecordParse(char *record, userNodePtr theUser);short FindRecordLength(short fRefNum);void BinaryDatabaseMerge(StandardFileReply dbEngrFileReply, StandardFileReply dbOtherFileReply);Boolean ReadFromBuffer(userNode *theStudent, Handle *buffer, short *fileRefNum, long *size, long *counter, short *recordLength);Boolean ReadFromBuffer(userNode *theStudent, Handle *buffer, short *fileRefNum, long *size, long *counter, short *recordLength);Boolean WriteToBuffer(userNode *theStudent, Handle *buffer, short *refNum, long *size, long *counter, short *recordLength, Boolean flush);void CreateIndex(void);void CreateTempFileName(Str255 tempFileName);Boolean WriteOtherUserDB(userNode **students, long *recordCount);Boolean ReadOtherUserDB(userNode ***students, long *recordCount);void WriteUsageLog(computerRecPtr theComputer);