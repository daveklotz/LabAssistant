#include "lab assistant.h"#include "Menu.h"#include "Norm_Files.h"#include "machine.h"#include "machineDown.h"#include "user.h"#include "machineUp.h"#include "checkOut.h"#include "checkIn.h"#include "event.h"#include "checkStatus.h"#include "addUser.h"#include "addEmployee.h"#include "listEmployee.h"#include "listUser.h"#include "teachingOnOff.h"#include "createDatabase.h"#include "loginEmployee.h"#include "logoutEmployee.h"#include "employeeRecord.h"#include <Movies.h>#include "aboutBoc.h"#include "waitList.h"#include "Print.h"//#include <GestaltEqu.h>/*******************************************************************		void HandleMenuChoice(long menuChoice)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu itemsCALLED BY: PASS: long menuChoice  : menu choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleMenuChoice(long menuChoice){	short	menu;	short	item;		if (menuChoice != 0)	{		menu = HiWord(menuChoice);		item = LoWord(menuChoice);				switch (menu)		{			case mApple:				HandleAppleChoice(item);				break;			case mFile:				HandleFileChoice(item);				break;			case mEdit:				HandleEditChoice(item);				break;			case mSupervisor:				HandleSupervisorChoice(item);				break;			case mUser:				HandleUserChoice(item);				break;			case mEmployee:				HandleEmployeeChoice(item);				break;			case mMachine:				HandleMachineChoice(item);				break;			case 135:						//135 = waitlist menu ID				HandleWaitlistChoice(item);				break;		}				HiliteMenu(0);	}}/*******************************************************************		void HandleAppleChoice(short item)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu items in Apple MenuCALLED BY: PASS: short item  : menu item choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleAppleChoice(short item){	MenuHandle		appleMenu;	Str255			accName;	short			accNumber;		switch (item)	{		case iAbout:			SysBeep(0);			PlayAboutBox();			break;		default:			appleMenu = GetMHandle(mApple);			GetItem(appleMenu, item, accName);			accNumber = OpenDeskAcc(accName);			break;	}}/*******************************************************************		void HandleFileChoice(short item)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu items in File MenuCALLED BY: PASS: short item  : menu item choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleFileChoice(short item){		switch (item)	{		case iPrint:			PrintComputerStatus();			break;		case iQuit:			Quit();			break;	}}/*******************************************************************		void HandleEditChoice(short item)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu items in Edit MenuCALLED BY: PASS: short item  : menu item choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleEditChoice(short item){	switch (item)	{		case iCut:			SysBeep(20);			break;		case iCopy:			SysBeep(20);			break;		case iPaste:			SysBeep(20);			break;		case iClear:			SysBeep(20);			break;	}}/*******************************************************************		void HandleUserChoice(short item)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu items in User MenuCALLED BY: PASS: short item  : menu item choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleUserChoice(short item){		switch (item)	{		case iCheckInUser:			HandleCheckIn();			break;		case iCheckOutUser:			HandleCheckOut();			break;		case iCheckUserStatus:			HandleCheckStatus();			break;	}}/*******************************************************************		void HandleEmployeeChoice(short item)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu items in Employee MenuCALLED BY: PASS: short item  : menu item choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleEmployeeChoice(short item){	switch (item)	{		case iLoginEmployee: 			LoginEmployee();			break;		case iLogoutEmployee:			LogoutEmployee();			break;		default:			MakeActiveEmployee(item);			break;	}}/*******************************************************************		void HandleMachineChoice(short item)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu items in Machine MenuCALLED BY: PASS: short item  : menu item choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleMachineChoice(short item){	switch (item)	{		case iMarkMachDown:			HandleMachineDown();			break;		case iMarkMachUp:			HandleMachineUp();			break;			case iTeaching:			TeachingOnOff();			break;	}}/*******************************************************************		void HandleSupervisorChoice(short item)--------------------------------------------------------------------SYNOPSIS: Handles the choice of menu items in Machine MenuCALLED BY: PASS: short item  : menu item choosenRETURN: nothingREVISION HISTORY:	Name				Date		Description	----				----		-----------	Jeremy C Norberg	9/01/93		Initial version*********************************************************************/void HandleSupervisorChoice(short item){	MenuHandle		theMenu;	extern char		gFeatureFlag;		theMenu = GetMenu(mSupervisor);	if(!BitTst(&gFeatureFlag, 3L))	{				DisableItem(theMenu, 0);	}	else	{		EnableItem(theMenu, 0);		switch (item)		{			case iEditEmployeeDB:				EditEmployeeInfo();				break;			case iEditUserDB:				EditUserInfo();				break;				case iCreateDB:				CreateDatabaseFiles();				break;			case iOptions:				if (BitTst(&gFeatureFlag, kDatabaseChecking))					BitClr(&gFeatureFlag, kDatabaseChecking);				else					BitSet(&gFeatureFlag, kDatabaseChecking);									break;		}	}}void HandleWaitlistChoice(short item){	WaitList theWaitingList;		theWaitingList.WaitlistBoxSetup();}void DisableMenus(Boolean disable){	MenuHandle 		theMenu;	extern char		gFeatureFlag;	if (disable)	{		for(short menID = mApple; menID <= mMachine + 1; menID++)		{			theMenu = GetMenu(menID);			DisableItem(theMenu, 0);		}		theMenu = GetMenu(mEdit);		EnableItem(theMenu, 0);					}	else if (!disable)	{		for(short menID = mApple; menID <= mMachine + 1; menID++)		{			theMenu = GetMenu(menID);			EnableItem(theMenu, 0);		}		theMenu = GetMenu(mSupervisor);		if(BitTst(&gFeatureFlag, 3L))		{			EnableItem(theMenu, 0);		}		else			DisableItem(theMenu, 0);			}}