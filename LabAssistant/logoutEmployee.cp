#include "lab assistant.h"#include "logoutEmployee.h"#include "employeeRecord.h"#include "employee.h"#include "listBox.h"#include "dialog.h"#include <string.h>extern employeeNode *gEmployeeLog;void LogoutEmployee(void){	dialogRecordHdl		dialogRecord;		dialogRecord = CreateDialogRec(LogoutEmployeeCallBack, kEventEmployeeList, (long) gEmployeeLog);	ListBoxSetup(dialogRecord);}void LogoutEmployeeCallBack(dialogRecordHdl dialogRecord){	short				theCell;	employeeNode		*theEmployee, *employeeHead;	short				counter, itemHit, menuCount;	MenuHandle			theMenu;	Str255				itemString, name;	extern char			gFeatureFlag;	theMenu = GetMenu(mEmployee);		HLock((Handle) dialogRecord);	theCell = (short) (*dialogRecord)->misc;	employeeHead = (employeeNode *) (*dialogRecord)->theRecord;	itemHit = (*dialogRecord)->itemHit;	HUnlock((Handle) dialogRecord);		theEmployee = employeeHead->next;		for(counter = 0; counter != theCell; counter ++)		theEmployee = theEmployee->next;		strcpy((char *) name, theEmployee->name);	CtoPstr((char *) name);		switch(itemHit)	{		case ok:			menuCount = CountMItems(theMenu);			for(counter = menuCount; counter > 3; counter --)			{				GetItem(theMenu, counter, itemString);				if(EqualString(name, itemString, false, false))					DelMenuItem(theMenu, counter);			}			DeleteEmployeeRecord(gEmployeeLog, theEmployee);			if(theEmployee->supervisor)				BitClr(&gFeatureFlag, 3L);			else				BitClr(&gFeatureFlag, 4L);			theMenu = GetMenu(mSupervisor);			if(BitTst(&gFeatureFlag, 3L))			{				EnableItem(theMenu, 0);			}			else				DisableItem(theMenu, 0);				case cancel:			break;	}		DisposeHandle((Handle) dialogRecord);	}