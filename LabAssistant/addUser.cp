#include "lab assistant.h"#include "addUser.h"#include "otherUser.h"#include "userRecord.h"#include "menu.h"void AddUser(void){	userNodePtr			theUser;	dialogRecordHdl		dialogRecord;		theUser = (userNodePtr) NewPtr(sizeof(userNode));	dialogRecord = (dialogRecordHdl) NewHandle(sizeof(dialogRec));		(theUser->name)[0] = 0;		theUser->studentNumber = 0;	theUser->gender = 'M';	theUser->priority = 3;	BitSet(&(theUser->status), RestrictedUserBit);	BitClr(&(theUser->status), LevelOfRestrictionBit);	BitClr(&(theUser->status), TempUserBit);	BitSet(&(theUser->status), UserTypeBit);		HLock((Handle) dialogRecord);	(*dialogRecord)->theRecord = (long) theUser;	(*dialogRecord)->theEvent = kEventAddUser;	(*dialogRecord)->callBack = AddUserCallBack;	HUnlock((Handle) dialogRecord);	DisableMenus(true);		EditUserBoxSetup(dialogRecord);}void AddUserCallBack(dialogRecordHdl dialogRecord){	userNode		*theUser, *userHead;	short			itemHit;		HLock((Handle) dialogRecord);	theUser = (userNode *) (*dialogRecord)->theRecord;	itemHit = (*dialogRecord)->itemHit;	HUnlock((Handle) dialogRecord);		switch(itemHit)	{		case ok:			userHead = CreateUserList();			ReadUserInfo(userHead);				AddUserRecord(userHead, theUser);			WriteUserInfo(userHead);			DeleteUserList(userHead);		case cancel:			DisposePtr((Ptr) theUser);			DisposeHandle((Handle) dialogRecord);			DisableMenus(true);			break;	}}