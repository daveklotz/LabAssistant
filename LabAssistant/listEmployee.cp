#include "lab assistant.h"#include <stdio.h>#include <string.h>#include "listEmployee.h"#include "listBox.h"#include "employee.h"#include "employeeRecord.h"#include "editListBox.h"#include "editEmployee.h"#include "addEmployee.h"void EditEmployeeInfo(void){	employeeNode		*employeeRecordsList;	dialogRecordHdl		dialogRecord;		employeeRecordsList = CreateEmployeeList();		ReadEmployeeInfo(employeeRecordsList);			dialogRecord = (dialogRecordHdl) NewHandle(sizeof(dialogRec));	HLock((Handle) dialogRecord);	(*dialogRecord)->theRecord = (long) employeeRecordsList;	(*dialogRecord)->theEvent = kEventEmployeeList;	(*dialogRecord)->callBack = EditEmployeeInfoCallBack;	HUnlock((Handle) dialogRecord);		EditListBoxSetup(dialogRecord);}void EditEmployeeInfoCallBack(dialogRecordHdl dialogRecord){	short				theCell;	employeeNode		*employeeRecordsList, *employeeHead;	short				counter, itemHit;	HLock((Handle) dialogRecord);	theCell = (short) (*dialogRecord)->misc;	employeeHead = (employeeNode *) (*dialogRecord)->theRecord;	itemHit = (*dialogRecord)->itemHit;	HUnlock((Handle) dialogRecord);		employeeRecordsList = employeeHead->next;		for(counter = 0; counter != theCell; counter ++)		employeeRecordsList = employeeRecordsList->next;		switch(itemHit)	{		case 2:			AddEmployee();			DeleteEmployeeList(employeeHead);			break;		case 3:			EditEmployee(employeeRecordsList, employeeHead);			break;		case 4:			DeleteEmployeeRecord(employeeHead, employeeRecordsList);			WriteEmployeeInfo(employeeHead);			DeleteEmployeeList(employeeHead);			break;	}		DisposeHandle((Handle) dialogRecord);	}